/**
 * BehaviorTree.js
 * https://github.com/Calamari/BehaviorTree.js
 *
 * Copyright 2013, Georg Tavonius
 * Licensed under the MIT license.
 *
 * Version: 0.7
 */
(function(e){var t=0,n=Base.extend({constructor:function(e){this.title=e.title||"btree"+ ++t,this._rootNode=e.tree,this._object=e.object},setObject:function(e){this._object=e},step:function(){this._started&&console.log('the BehaviorTree "'+this.title+'" did call step but one Task did not finish on last call of step.'),this._started=!0;var e=n.getNode(this._rootNode);this._actualNode=e,e.setControl(this),e.start(this._object),e.run(this._object)},running:function(e){this._started=!1},success:function(){this._actualNode.end(this._object),this._started=!1},fail:function(){this._actualNode.end(this._object),this._started=!1}});n._registeredNodes={},n.register=function(e,t){typeof e=="string"?this._registeredNodes[e]=t:this._registeredNodes[e.title]=e},n.getNode=function(e){var t=e instanceof n.Node?e:this._registeredNodes[e];return t||console.log('The node "'+e+'" could not be looked up. Maybe it was never registered?'),t},e.BehaviorTree=n})(window),function(e){var t=Base.extend({constructor:function(e){this.base(e)},start:function(){},end:function(){},run:function(){console.log("Warning: run of "+this.title+" not implemented!"),this.fail()},setControl:function(e){this._control=e},running:function(){this._control.running(this)},success:function(){this._control.success()},fail:function(){this._control.fail()}});e.Node=t;var n=e.Node.extend({constructor:function(e){this.base(e),this.children=this.nodes||[]},start:function(){this._actualTask=0},run:function(e){this._object=e,this.start(),this._actualTask<this.children.length&&this._run(e),this.end()},_run:function(){var t=e.getNode(this.children[this._actualTask]);this._runningNode=t,t.setControl(this),t.start(this._object),t.run(this._object)},running:function(e){this._nodeRunning=e,this._control.running(e)},success:function(){this._runningNode.end(this._object)},fail:function(){this._runningNode.end(this._object)}});e.BranchNode=n;var r=e.BranchNode.extend({success:function(){this.base(),this._control.success()},fail:function(){this.base(),++this._actualTask,this._actualTask<this.children.length?this._run(this._object):this._control.fail()}});e.Priority=r;var i=e.BranchNode.extend({_run:function(){this._nodeRunning?(this._nodeRunning.run(this._object),this._nodeRunning=null):this.base()},success:function(){this.base(),++this._actualTask,this._actualTask<this.children.length?this._run(this._object):this._control.success()},fail:function(){this.base(),this._control.fail()}});e.Sequence=i;var s=e.Node.extend({});e.Task=s}(BehaviorTree);
